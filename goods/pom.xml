<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jiaming</groupId>
	<artifactId>goods</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>goods</name>
	<description />

	<properties>
		<webVersion>2.5</webVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 自定义标签 配合 OGNL ${} -->
		<servlet.version>5.0-1</servlet.version>
		<jsp.version>2.1</jsp.version>
		<jstl.version>1.2.4</jstl.version>
		<fileupload.version>1.3.3</fileupload.version>
		<jackson.version>2.5.3</jackson.version>
		<spring.version>4.3.8.RELEASE</spring.version>
		<aopalliance.version>1.0</aopalliance.version>
		<mybatis.version>3.4.4</mybatis.version>
		<mybatis-spring.version>1.3.2</mybatis-spring.version>
		<druid.version>1.0.20</druid.version>
		<mysql.version>5.1.34</mysql.version>
		<pagehelper.version>5.0.0</pagehelper.version>
		<junit.version>4.10</junit.version>
		<log4j.version>1.2.12</log4j.version>
		<cglib.version>3.2.2</cglib.version>
	</properties>
	<dependencies>
		<!-- Servlet 当前的这个包 在 打包的时候 不携带 class12.war -->
		<dependency>
			<groupId>org.apache.openejb</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- JSP -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- JSTL -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.servlet.jsp.jstl</artifactId>
			<version>${jstl.version}</version>
			<scope>compile</scope>
		</dependency>
		<!--web -->
		<!-- commons-fileupload -->
		<!-- 直接书写的 XML代码 都是 叫做 直接依赖 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${fileupload.version}</version>

		</dependency>
		<!-- jackson 2.5.3 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- 直接依赖的 书写顺序 就是 使用依赖的优先级顺序 -->
		<!-- 直接依赖的优先级 要 高于 间接依赖 -->
		<!-- spring-webmvc spring-web, spring-beans,expression,core,context , commons-logging -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- AOP spring-aop,spring-aspects, aopaliance,aspectJwear -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>${aopalliance.version}</version>
		</dependency>
		<!--TX tx, jdbc, orm -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>

		</dependency>
		<!-- Myabatis-Spring -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!-- Mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.4</version>
		</dependency>
		<!-- Druid 编译阶段 参加， 打包带走 运行阶段 参加 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.20</version>
			<scope>compile</scope>
		</dependency>
		<!-- Mysql 编译不参加， 打包带走 运行阶段参加 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.34</version>
			<scope>runtime</scope>
		</dependency>
		<!-- PageHelper -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
			<version>5.0.0</version>
		</dependency>
		<!-- log4J -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.12</version>
		</dependency>
		<!-- Junit 编译参加， 打包不带走， 运行阶段没有它， 测试阶段可以使用 -->
		<!-- System ,配合 systempath 标签共同使用， 不再使用本地仓库，而是 本地硬盘路径了 <systemPath>url</systemPath> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<!-- cglib -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.2.2</version>
		</dependency>
		<!-- lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- 验证码生成 -->
		<dependency>
			<groupId>com.jiaming</groupId>
			<artifactId>verify</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- 发送邮件 -->
		<dependency>
			<groupId>com.jiaming</groupId>
			<artifactId>activation</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.jiaming</groupId>
			<artifactId>mail</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.jiaming</groupId>
			<artifactId>mailhelper</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- 支付宝 -->
		<dependency>
			<groupId>com.alipay.sdk</groupId>
			<artifactId>alipay-sdk-java</artifactId>
			<version>4.10.28.ALL</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<!-- 画蛇添足 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- war -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration />
			</plugin>
			<!-- mybatis generator -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.2</version>
				<configuration>
					<!-- 啰嗦的 -->
					<verbose>true</verbose> <!-- 覆盖之前操作 接口文件 实体类文件 都给你重新覆盖了 xml映射文件 不会给你覆盖的 -->
					<overwrite>true</overwrite> <!-- 如果你不指定 要读的配置文件 名称 那么 这个配置文件 就一定要叫 generatorConfig.xml -->
					<!-- <configurationFile>src/main/resources/gen.xml</configurationFile> -->
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>